traversal techniques of a tree


class Node:
    def __init__(self,x):
        self.data=x
        self.left=None
        self.right=None
    def insert(self,x):
        if self.data==None:
            self.data=x
            return
        if self.data>x1:
            if self.left==None:
                self.left=Node(x)
            else:
                self.left.insert(x)
        else:
            if self.right==None:
                self.right=Node(x)
            else:
                self.right.insert(x)
    def inorder(self):
        if self.left:
            self.left.inorder()
        print(self.data,end=" ")
        if self.right:
            self.right.inorder()
    def preorder(self):
        print(self.data,end=" ")
        if self.left:
            self.left.preorder()
        if self.right:
            self.right.preorder()
    def postorder(self):
        if self.left:
            self.left.postorder()
        if self.right:
            self.right.postorder()
        print(self.data,end=" ")
root=Node(30)
while True:
    print()
    print("1.Insert\n2.preorder\n3.inorder\n4.postorder\n5.exit")
    ch=int(input("enter your choice"))
    if ch==1:
        x=int(input("enter elements"))
        root.insert(x)
    elif ch==2:
        root.preorder()
    elif ch==3:
        root.inorder()
    elif ch==4:
        root.postorder()
    elif ch==5:
        break
    else:
        print("invalid choice")

output
1.Insert
2.preorder
3.inorder
4.postorder
5.exit
enter your choice1
enter elements34

1.Insert
2.preorder
3.inorder
4.postorder
5.exit
enter your choice1
enter elements78

1.Insert
2.preorder
3.inorder
4.postorder
5.exit
enter your choice1
enter elements3

1.Insert
2.preorder
3.inorder
4.postorder
5.exit
enter your choice1
enter elements78

1.Insert
2.preorder
3.inorder
4.postorder
5.exit
enter your choice1
enter elements90

1.Insert
2.preorder
3.inorder
4.postorder
5.exit
enter your choice1
enter elements29

1.Insert
2.preorder
3.inorder
4.postorder
5.exit
enter your choice1
enter elements88

1.Insert
2.preorder
3.inorder
4.postorder
5.exit
enter your choice2
30 3 29 34 78 78 90 88 
1.Insert
2.preorder
3.inorder
4.postorder
5.exit
enter your choice3
3 29 30 34 78 78 88 90 
1.Insert
2.preorder
3.inorder
4.postorder
5.exit
enter your choice4
29 3 88 90 78 78 34 30 
1.Insert
2.preorder
3.inorder
4.postorder
5.exit